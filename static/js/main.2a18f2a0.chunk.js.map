{"version":3,"sources":["utils/utils.ts","components/Dashboard/Dashboard.tsx","utils/useDemoConfig.tsx","components/Liquidity/Liquidity.tsx","components/Trending/Trending.tsx","components/Layout/Layout.tsx","views/Home/Home.tsx","App.tsx","index.jsx"],"names":["EthereumContext","createContext","data","label","Array","fill","map","item","index","date","String","price","Math","sin","cos","Dashboard","name","primaryAxis","React","useMemo","getValue","datum","secondaryAxes","scaleType","elementType","className","style","height","options","primaryAxisType","secondaryAxisType","primaryAxisPosition","secondaryAxisPosition","secondaryAxisStack","primaryAxisShow","secondaryAxisShow","interactionMode","tooltipGroupingMode","tooltipAnchor","tooltipAlign","snapCursor","optionKeys","Object","keys","makeDataFrom","dataType","series","datums","useR","max","round","random","d","i","start","startDate","Date","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","length","min","rMin","rMax","nullChance","_","distribution","primary","getTime","secondary","radius","floor","log","undefined","makeSeries","Liquidity","show","count","resizable","canRandomize","primaryAxisStack","useState","state","setState","useEffect","old","Options","filter","option","indexOf","value","onChange","target","toString","randomizeData","useDemoConfig","Trending","Layout","children","href","type","placeholder","id","to","path","exact","render","ERROR_NETWORK_NOT_ADDED","CHAIN_ID","switchToChain","ethereum","a","request","method","params","chainId","code","switched","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","Home","useContext","assert","callback","isOnChain","setIsOnChain","prepareChain","then","App","setEthereum","detectEthereumProvider","provider","Provider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a18f2a0.chunk.js","sourcesContent":["import { createContext, useEffect } from \"react\";\n\nimport { BaseProvider } from \"@metamask/providers\";\n\nexport const EthereumContext = createContext<BaseProvider | null>(null);\n\nexport function useMountState(callback: () => void) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(callback, []);\n}\n","import React from \"react\";\nimport { AxisOptions, Chart } from \"react-charts\";\n\ninterface Props {\n  name: string;\n}\n\ninterface DailyPrices {\n  date: string;\n  price: number;\n}\n\ntype Series = {\n  label: string,\n  data: DailyPrices[]\n}\n\nconst data: Series[] = [{ label: \"BNB\", data: Array(20).fill(0).map((item, index) => ({ date: String(index), price: index * (2 + Math.sin(index)) })) },\n  { label: \"CELT\", data: Array(20).fill(0).map((item, index) => ({ date: String(index), price: index * (2 + Math.cos(index)) })) }];\n\nexport default function Dashboard({ name }: Props) {\n  const primaryAxis = React.useMemo(\n    (): AxisOptions<DailyPrices> => ({\n      getValue: (datum) => datum.date,\n    }),\n    [],\n  );\n\n  const secondaryAxes = React.useMemo(\n    (): AxisOptions<DailyPrices>[] => [\n      {\n        getValue: (datum) => datum.price,\n        scaleType: \"linear\",\n        elementType: \"line\",\n      },\n    ],\n    [],\n  );\n  return (\n    <div>\n      <h3>\n        {name}\n      </h3>\n      <div className=\"w-75 mx-4\" style={{ height: \"20rem\" }}>\n        <Chart\n          options={{\n            data,\n            primaryAxis,\n            secondaryAxes,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-shadow */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport React from \"react\";\n\n//\n\nconst options = {\n  elementType: [\"line\", \"area\", \"bar\"],\n  primaryAxisType: [\"linear\", \"time\", \"log\", \"band\"],\n  secondaryAxisType: [\"linear\", \"time\", \"log\", \"band\"],\n  primaryAxisPosition: [\"top\", \"left\", \"right\", \"bottom\"],\n  secondaryAxisPosition: [\"top\", \"left\", \"right\", \"bottom\"],\n  secondaryAxisStack: [true, false],\n  primaryAxisShow: [true, false],\n  secondaryAxisShow: [true, false],\n  interactionMode: [\"primary\", \"closest\"],\n  tooltipGroupingMode: [\"single\", \"primary\", \"secondary\", \"series\"],\n  tooltipAnchor: [\n    \"closest\",\n    \"top\",\n    \"bottom\",\n    \"left\",\n    \"right\",\n    \"center\",\n    \"gridTop\",\n    \"gridBottom\",\n    \"gridLeft\",\n    \"gridRight\",\n    \"gridCenter\",\n    \"pointer\",\n  ],\n  tooltipAlign: [\n    \"auto\",\n    \"top\",\n    \"bottom\",\n    \"left\",\n    \"right\",\n    \"topLeft\",\n    \"topRight\",\n    \"bottomLeft\",\n    \"bottomRight\",\n    \"center\",\n  ],\n  snapCursor: [true, false],\n} as const;\n\ntype DataType = \"time\" | \"ordinal\" | \"linear\";\ntype ElementType = typeof options[\"elementType\"][number];\ntype PrimaryAxisType = typeof options[\"primaryAxisType\"][number];\ntype SecondaryAxisType = typeof options[\"secondaryAxisType\"][number];\ntype PrimaryAxisPosition = typeof options[\"primaryAxisPosition\"][number];\ntype SecondaryAxisPosition = typeof options[\"secondaryAxisPosition\"][number];\ntype TooltipAnchor = typeof options[\"tooltipAnchor\"][number];\ntype TooltipAlign = typeof options[\"tooltipAlign\"][number];\ntype InteractionMode = typeof options[\"interactionMode\"][number];\ntype TooltipGroupingMode = typeof options[\"tooltipGroupingMode\"][number];\n\nconst optionKeys = Object.keys(options) as (keyof typeof options)[];\n\nexport default function useChartConfig({\n  series,\n  datums = 10,\n  useR,\n  show = [],\n  count = 1,\n  resizable = true,\n  canRandomize = true,\n  dataType = \"time\",\n  elementType = \"line\",\n  primaryAxisType = \"time\",\n  secondaryAxisType = \"linear\",\n  primaryAxisPosition = \"bottom\",\n  secondaryAxisPosition = \"left\",\n  primaryAxisStack = false,\n  secondaryAxisStack = true,\n  primaryAxisShow = true,\n  secondaryAxisShow = true,\n  tooltipAnchor = \"closest\",\n  tooltipAlign = \"auto\",\n  interactionMode = \"primary\",\n  tooltipGroupingMode = \"primary\",\n  snapCursor = true,\n}: {\n  series: number;\n  datums?: number;\n  useR?: boolean;\n  show?: (keyof typeof options)[];\n  count?: number;\n  resizable?: boolean;\n  canRandomize?: boolean;\n  dataType?: DataType;\n  elementType?: ElementType;\n  primaryAxisType?: PrimaryAxisType;\n  secondaryAxisType?: SecondaryAxisType;\n  primaryAxisPosition?: PrimaryAxisPosition;\n  secondaryAxisPosition?: SecondaryAxisPosition;\n  primaryAxisStack?: boolean;\n  secondaryAxisStack?: boolean;\n  primaryAxisShow?: boolean;\n  secondaryAxisShow?: boolean;\n  tooltipAnchor?: TooltipAnchor;\n  tooltipAlign?: TooltipAlign;\n  interactionMode?: InteractionMode;\n  tooltipGroupingMode?: TooltipGroupingMode;\n  snapCursor?: boolean;\n}) {\n  const [state, setState] = React.useState({\n    count,\n    resizable,\n    canRandomize,\n    dataType,\n    elementType,\n    primaryAxisType,\n    secondaryAxisType,\n    primaryAxisPosition,\n    secondaryAxisPosition,\n    primaryAxisStack,\n    secondaryAxisStack,\n    primaryAxisShow,\n    secondaryAxisShow,\n    tooltipAnchor,\n    tooltipAlign,\n    interactionMode,\n    tooltipGroupingMode,\n    snapCursor,\n    datums,\n    data: makeDataFrom(dataType, series, datums, useR),\n  });\n\n  React.useEffect(() => {\n    setState((old) => ({\n      ...old,\n      data: makeDataFrom(dataType, series, datums, useR),\n    }));\n  }, [count, dataType, datums, series, useR]);\n\n  const randomizeData = () => setState((old) => ({\n    ...old,\n    data: makeDataFrom(dataType, series, datums, useR),\n  }));\n\n  const Options = optionKeys\n    .filter((option) => show.indexOf(option) > -1)\n    .map((option) => (\n      <div key={option}>\n        {option}\n        : &nbsp;\n        <select\n          value={state[option] as string}\n          onChange={({ target: { value } }) => setState((old) => ({\n            ...old,\n            [option]:\n                typeof options[option][0] === \"boolean\"\n                  ? value === \"true\"\n                  : value,\n          }))}\n        >\n          {options[option].map((d: any) => (\n            <option value={d as string} key={d.toString()}>\n              {d.toString()}\n            </option>\n          ))}\n        </select>\n        <br />\n      </div>\n    ));\n\n  return {\n    ...state,\n    randomizeData,\n    Options,\n  };\n}\n\nfunction makeDataFrom(\n  dataType: DataType,\n  series: number,\n  datums: number,\n  useR?: boolean,\n) {\n  return [\n    ...new Array(series || Math.max(Math.round(Math.random() * 5), 1)),\n  ].map((d, i) => makeSeries(i, dataType, datums, useR));\n}\n\nfunction makeSeries(\n  i: number,\n  dataType: DataType,\n  datums: number,\n  useR?: boolean,\n) {\n  const start = 0;\n  const startDate = new Date();\n  startDate.setUTCHours(0);\n  startDate.setUTCMinutes(0);\n  startDate.setUTCSeconds(0);\n  startDate.setUTCMilliseconds(0);\n  // const length = 5 + Math.round(Math.random() * 15)\n  const length = datums;\n  const min = 0;\n  const max = 100;\n  const rMin = 2;\n  const rMax = 20;\n  const nullChance = 0;\n  return {\n    label: `Series ${i + 1}`,\n    data: [...new Array(length)].map((_, i) => {\n      let x;\n\n      if (dataType === \"ordinal\") {\n        x = `Ordinal Group ${start + i}`;\n      } else if (dataType === \"time\") {\n        x = new Date(startDate.getTime() + 60 * 1000 * 60 * 24 * i);\n      } else if (dataType === \"linear\") {\n        x = Math.random() < nullChance\n          ? null\n          : min + Math.round(Math.random() * (max - min));\n      } else {\n        x = start + i;\n      }\n\n      const distribution = 1.1;\n\n      const y = Math.random() < nullChance\n        ? null\n        : min + Math.round(Math.random() * (max - min));\n\n      const r = !useR\n        ? undefined\n        : rMax\n          - Math.floor(\n            Math.log(Math.random() * (distribution ** rMax - rMin) + rMin)\n              / Math.log(distribution),\n          );\n\n      return {\n        primary: x,\n        secondary: y,\n        radius: r,\n      };\n    }),\n  };\n}\n","import React from \"react\";\nimport { AxisOptions, Chart } from \"react-charts\";\nimport useDemoConfig from \"../../utils/useDemoConfig\";\n\ninterface Props {\n  name: string;\n}\n\nexport default function Liquidity({ name }: Props) {\n  const { data } = useDemoConfig({\n    series: 2,\n    dataType: \"ordinal\",\n  });\n  data[0].label = \"新增流动性\";\n  data[1].label = \"撤销流动性\";\n\n  const primaryAxis = React.useMemo<\n    AxisOptions<typeof data[number][\"data\"][number]>\n  >(\n    () => ({\n      getValue: (datum) => datum.primary,\n    }),\n    [],\n  );\n\n  const secondaryAxes = React.useMemo<\n    AxisOptions<typeof data[number][\"data\"][number]>[]\n  >(\n    () => [\n      {\n        getValue: (datum) => datum.secondary,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <div>\n      <h3>\n        {name}\n      </h3>\n      <div className=\"w-75 mx-4\" style={{ height: \"20rem\" }}>\n        <Chart\n          options={{\n            data,\n            primaryAxis,\n            secondaryAxes,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { AxisOptions, Chart } from \"react-charts\";\n\ninterface Props {\n  name: string;\n}\n\ninterface DailyPrices {\n  date: string;\n  price: number;\n}\n\ntype Series = {\n  label: string,\n  data: DailyPrices[]\n}\n\nconst data: Series[] = [{ label: \"BNB\", data: Array(20).fill(0).map((item, index) => ({ date: String(index), price: index * (2 + Math.sin(index)) })) },\n  { label: \"CELT\", data: Array(20).fill(0).map((item, index) => ({ date: String(index), price: index * (2 + Math.random()) })) }];\n\nexport default function Trending({ name }: Props) {\n  const primaryAxis = React.useMemo(\n    (): AxisOptions<DailyPrices> => ({\n      getValue: (datum) => datum.date,\n    }),\n    [],\n  );\n\n  const secondaryAxes = React.useMemo(\n    (): AxisOptions<DailyPrices>[] => [\n      {\n        getValue: (datum) => datum.price,\n        scaleType: \"linear\",\n        elementType: \"line\",\n      },\n    ],\n    [],\n  );\n  return (\n    <div>\n      <h3>\n        {name}\n      </h3>\n      <div className=\"w-75 mx-4\" style={{ height: \"20rem\" }}>\n        <Chart\n          options={{\n            data,\n            primaryAxis,\n            secondaryAxes,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { ReactNode } from \"react\";\nimport {\n  BrowserRouter as Router, Switch, Route, Link, Redirect,\n} from \"react-router-dom\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Liquidity from \"../Liquidity/Liquidity\";\nimport Trending from \"../Trending/Trending\";\nimport \"./Layout.scss\";\n\ninterface Props {\n  children: JSX.Element;\n}\n\nexport default function Layout({ children }: Props) {\n  return (\n    <Router>\n\n      <div>\n        <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"#\">\n            Dashboard\n          </a>\n          <button\n            className=\"navbar-toggler position-absolute d-md-none collapsed\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#sidebarMenu\"\n            aria-controls=\"sidebarMenu\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <input\n            className=\"form-control form-control-dark w-100\"\n            type=\"text\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n          />\n          <div className=\"navbar-nav\">\n            <div className=\"nav-item text-nowrap\">\n              <a className=\"nav-link px-3\" href=\"#\">\n                Sign out\n              </a>\n            </div>\n          </div>\n        </header>\n\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <nav\n              id=\"sidebarMenu\"\n              className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse mt-4\"\n            >\n              <div className=\"position-sticky pt-3\">\n                <ul className=\"nav flex-column\">\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                      <span data-feather=\"home\" />\n                      <Link to=\"/dashboard\">主页</Link>\n                    </a>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">\n                      <span data-feather=\"file\" />\n                      <Link to=\"/trending\">趋势</Link>\n                    </a>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">\n                      <span data-feather=\"shopping-cart\" />\n                      <Link to=\"/liquidity\">流动性</Link>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n\n            <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n              <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                <Switch>\n                  <Route path=\"/dashboard\">\n                    <h1 className=\"h2\">主页</h1>\n                  </Route>\n                  <Route path=\"/trending\">\n                    <h1 className=\"h2\">趋势</h1>\n                  </Route>\n                  <Route path=\"/liquidity\">\n                    <h1 className=\"h2\">流动性</h1>\n                  </Route>\n                </Switch>\n                {/* {children} */}\n              </div>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => (\n                    <Redirect to=\"/dashboard\" />\n                  )}\n                />\n                <Route path=\"/dashboard\">\n                  <Dashboard name=\"仪表盘\" />\n                </Route>\n                <Route path=\"/trending\"><Trending name=\"趋势\" /></Route>\n                <Route path=\"/liquidity\"><Liquidity name=\"流动性\" /></Route>\n              </Switch>\n            </main>\n          </div>\n        </div>\n      </div>\n    </Router>\n\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport assert from \"assert\";\n\nimport { BaseProvider } from \"@metamask/providers\";\n\nimport { EthereumContext, useMountState } from \"../../utils/utils\";\nimport Layout from \"../../components/Layout/Layout\";\n\nconst ERROR_NETWORK_NOT_ADDED = 4902;\nconst CHAIN_ID = \"0x42\";\n\nasync function switchToChain(ethereum: BaseProvider) {\n  try {\n    await ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: CHAIN_ID }],\n    });\n  } catch (switchError) {\n    const { code }: { code: number } = switchError as { code: number };\n\n    if (code !== ERROR_NETWORK_NOT_ADDED) {\n      return code;\n    }\n  }\n\n  return null;\n}\n\nasync function prepareChain(ethereum: BaseProvider) {\n  const switched = await switchToChain(ethereum);\n  if (switched && switched !== ERROR_NETWORK_NOT_ADDED) {\n    return false;\n  }\n\n  try {\n    await ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [\n        {\n          chainId: CHAIN_ID,\n          chainName: \"OKExChain Mainnet\",\n          nativeCurrency: { name: \"OKT\", symbol: \"OKT\", decimals: 18 },\n          rpcUrls: [\"https://exchainrpc.okex.org\"],\n          blockExplorerUrls: [\"https://www.oklink.com/okexchain\"],\n        },\n      ],\n    });\n  } catch (addError) {\n    return false;\n  }\n\n  return !(await switchToChain(ethereum));\n}\n\nexport default function Home() {\n  const ethereum = useContext<BaseProvider | null>(EthereumContext);\n  assert(ethereum);\n\n  const [isOnChain, setIsOnChain] = useState(false);\n\n  useMountState(() => {\n    prepareChain(ethereum).then(setIsOnChain, () => {\n      /* don't need to handler promise */\n    });\n  });\n\n  if (isOnChain) {\n    return (\n      <div>\n        Now you are on chain!\n        <Layout>\n          <span>hello</span>\n        </Layout>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      You are not on chain!\n      <Layout>\n        <span>hello</span>\n      </Layout>\n    </div>\n  );\n}\n","import \"./App.scss\";\n\nimport React, { useState } from \"react\";\n\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport { EthereumContext } from \"./utils/utils\";\n\nimport Home from \"./views/Home/Home\";\n\nfunction App() {\n  const [ethereum, setEthereum] = useState(null);\n\n  detectEthereumProvider()\n    .then(\n      (provider) => { (setEthereum as (_: unknown) => void)(provider); },\n      () => { /* don't need to handle promise */ },\n    );\n\n  if (!ethereum) {\n    return <div>You must installed MetaMask to use Celestial dashboard!</div>;\n  }\n\n  return (\n    <EthereumContext.Provider value={ethereum}>\n      <Home />\n    </EthereumContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}