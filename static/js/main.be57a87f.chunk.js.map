{"version":3,"sources":["utils/utils.ts","views/Home/Home.tsx","components/ToggleButtons/ToggleButtons.tsx","components/RangeInput/RangeInput.tsx","views/NFT/NFT.tsx","Routes.tsx","App.tsx","index.jsx"],"names":["EthereumContext","createContext","AccountContext","ChainContext","EMPTY_FUNCTION","validatePositiveInteger","raw","value","BigInt","String","_","FIXED_DECIMAL_UNIT","validatePositiveFixedDecimal","split","length","left","full","replace","fixedDecimalToStr","decimal","right","rightRaw","padStart","slice","updateAmountByStr","setter","valSetter","match","updateIntegerByStr","To","address","amount","this","TOKENS","id","name","CONTRACT_ABIS","inputs","internalType","type","outputs","stateMutability","ERC20_ABIS","constant","payable","approve","web3","chain","index","from","sender","Promise","resolve","eth","Contract","methods","send","SENDERS","airdrop","toList","defaultAmount","progressSetter","limit","unit","contractInstance","defaultTo","Array","filter","to","explicitedTo","explicitedToAmount","airdrops","progress","i","toSlice","push","airDropBatch","then","amountSlice","map","v","assert","airDropIndividual","all","Home","ethereum","useContext","Web3","account","useState","randomAddressesQuantity","setRandomAddressesQuantity","minAmountRaw","setMinAmountRaw","minAmount","setMinAmount","maxAmountRaw","setMaxAmountRaw","maxAmount","setMaxAmount","selectedToken","setSelectedToken","allowanceAmount","setAllowanceAmount","defaultAmountRaw","setDefaultAmountRaw","setDefaultAmount","addressesPerTransaction","setAddressesPerTransaction","toRaw","setToRaw","setToList","isApproving","setIsApproving","isGiving","setIsGiving","isUpdatingAllowance","setIsUpdatingAllowance","givedAddresses","setGivedAddresses","setDecimal","token","updateAllowance","owner","allowance","call","getAllowance","updateToRaw","previousAddress","replaceAll","trim","every","startsWith","parseAddresses","useEffect","isDefaultAmountNeeded","some","isDefaultAmountInvalid","Container","className","Row","InputGroup","hasValidation","Form","Control","as","onChange","e","currentTarget","isInvalid","Feedback","Col","xs","Text","placeholder","md","Button","onClick","result","Number","accounts","create","Math","floor","random","join","disabled","ButtonGroup","ToggleButton","variant","checked","Spinner","animation","size","role","a","utils","isAddress","Table","ToggleButtons","selects","groupName","selectedId","setSelectedId","changeId","select","find","s","RangeInput","text","defaultValue","min","max","setRaw","setIsInvalid","update","defaultProps","components","NFTS","QUALITIES","INTENTIONS","WARSHIP_SPECIFIC_VALUES","range","CAPTAIN_SPECIFIC_VALUES","SKINS","airdropMaintainer","quality","intention","level","specificValues","skin","forgeMaintainer","airdropCaptainMaintainer","forgeCaptainMaintainer","NFT","selectedNFT","setSelectedNFT","selectedQuality","setSelectedQuality","selectedIntention","setSelectedIntention","setSpecificValues","selectedSkin","setSelectedSkin","skins","setSkins","setLevel","specificValuesInvalid","skinRegistry","skinResult","description","skinStats","hexToUtf8","o","Routes","path","ERROR_NETWORK_NOT_ADDED","CHAINS","chainId","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","switchToChain","selectedChain","request","method","params","code","switched","App","setEthereum","setAccount","isOnChain","setIsOnChain","setSelectedChain","currentChain","setCurrentChain","detectEthereumProvider","provider","updateSelectedAccount","useCallback","selectedAddress","on","removeListener","prepareChain","Provider","Navbar","Nav","Select","target","Brand","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be57a87f.chunk.js","sourcesContent":["import { createContext, useEffect } from \"react\";\n\nimport { BaseProvider } from \"@metamask/providers\";\n\nexport const EthereumContext = createContext<BaseProvider | null>(null);\nexport const AccountContext = createContext<string | null>(null);\nexport const ChainContext = createContext<number>(0);\n\nexport function useMountState(callback: () => void): void {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(callback, []);\n}\n\nexport function EMPTY_FUNCTION(): void { /* ignore promise handling */ }\n\nexport function validatePositiveInteger(raw: string): bigint | null {\n  try {\n    const value = BigInt(raw);\n    if (String(value) === raw && value > 0) {\n      return value;\n    }\n  } catch (_) { /* do nothing */ }\n  return null;\n}\n\nconst FIXED_DECIMAL_UNIT = BigInt(10 ** 18);\nexport function validatePositiveFixedDecimal(raw: string): bigint | null {\n  try {\n    const value = raw.split(\".\");\n    if (value.length > 2 || value.length === 0) {\n      return null;\n    }\n    const left = validatePositiveInteger(value[0]);\n    if (value.length === 1) {\n      if (!left) {\n        return null;\n      }\n      return left * FIXED_DECIMAL_UNIT;\n    }\n    if (value[0] !== \"0\" && value[0] !== \"\" && !left) {\n      return null;\n    }\n    const full = validatePositiveInteger(raw.replace(\".\", \"\").replace(/^0*/g, \"\"));\n    if (!full || value[1].length > 18) {\n      return null;\n    }\n    return full * BigInt(10 ** (18 - value[1].length));\n  } catch (_) { /* do nothing */ }\n  return null;\n}\n\nexport function fixedDecimalToStr(value: bigint, decimal: number): string {\n  const left = value / BigInt(10 ** 18);\n  const right = value - left * BigInt(10 ** 18);\n  if (right === BigInt(0) || decimal === 0) {\n    return String(left);\n  }\n  let rightRaw = String(right).padStart(18, \"0\");\n  if (rightRaw.length > decimal) {\n    rightRaw = rightRaw.slice(0, decimal);\n  }\n  return `${left}.${rightRaw}`.replace(/0*$/g, \"\");\n}\n\nexport function updateAmountByStr(\n  raw: string,\n  setter: (_: string) => void,\n  valSetter?: (_: bigint | null) => void,\n): void {\n  const value = validatePositiveFixedDecimal(raw);\n  if (raw === \"\" || raw === \"0\" || raw.match(/^0\\.0*$/g) || value !== null) {\n    setter(raw);\n    if (valSetter) {\n      valSetter(value);\n    }\n  }\n}\n\nexport function updateIntegerByStr(\n  raw: string,\n  setter: (_: string) => void,\n  valSetter?: (_: bigint | null) => void,\n): void {\n  const value = validatePositiveInteger(raw);\n  if (raw === \"\" || value !== null) {\n    setter(raw);\n    if (valSetter) {\n      valSetter(value);\n    }\n  }\n}\n","import \"./Home.scss\";\n\nimport React, {\n  useState,\n  useContext,\n  useEffect,\n} from \"react\";\nimport Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport assert from \"assert\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Table from \"react-bootstrap/Table\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\n\nimport { BaseProvider } from \"@metamask/providers\";\n\nimport {\n  EthereumContext,\n  AccountContext,\n  ChainContext,\n  EMPTY_FUNCTION,\n  updateAmountByStr,\n  updateIntegerByStr,\n  validatePositiveFixedDecimal,\n  fixedDecimalToStr,\n} from \"../../utils/utils\";\n\nclass To {\n  address: string;\n\n  amount: bigint | null;\n\n  constructor(address: string, amount: bigint | null) {\n    this.address = address;\n    this.amount = amount;\n  }\n}\n\nfunction parseAddresses(raw: string): To[] | null {\n  const toList: To[] = [];\n  let previousAddress: To | null = null;\n\n  const isValid = raw\n    .replaceAll(\",\", \" \")\n    .replaceAll(\"\\n\", \" \")\n    .replaceAll('\"', \"\")\n    .replaceAll(\"'\", \"\")\n    .replaceAll(\"`\", \"\")\n    .replaceAll(/  */g, \" \")\n    .trim()\n    .split(\" \")\n    .every((value) => {\n      if (value.startsWith(\"0x\")) {\n        previousAddress = new To(value, null);\n        toList.push(previousAddress);\n        return true;\n      }\n      const amount = validatePositiveFixedDecimal(value);\n      if (amount) {\n        if (previousAddress === null || previousAddress.amount !== null) {\n          return false;\n        }\n        previousAddress.amount = amount;\n      } else {\n        return false;\n      }\n      return true;\n    });\n\n  if (isValid) {\n    return toList;\n  }\n\n  return null;\n}\n\nconst TOKENS = [\n  [\n    {\n      id: 0,\n      name: \"Celt\",\n      address: \"0x5Ab622494AB7C5e81911558c9552DBd517F403fb\",\n      decimal: 18,\n    },\n    {\n      id: 1,\n      name: \"Crystal\",\n      address: \"0xBD87c06D865a3717A16041aCD8d33922e60E85CE\",\n      decimal: 18,\n    },\n    {\n      id: 2,\n      name: \"CeltChest\",\n      address: \"0x777c5a7152F999B4bBC26295C65a0ACb066f75e9\",\n      decimal: 0,\n    },\n  ],\n  [\n    {\n      id: 0,\n      name: \"Celt\",\n      address: \"0x4f34292F109870d5fdDA602Bc7e3ae56D520D6e1\",\n      decimal: 18,\n    },\n    {\n      id: 1,\n      name: \"Crystal\",\n      address: \"0xE93B4fb367F3678A32f28254355f9f6ac000c976\",\n      decimal: 18,\n    },\n    {\n      id: 2,\n      name: \"CeltChest\",\n      address: \"0x418f3FD459ea7d85B75659826a1AFa0f5aCDCE8a\",\n      decimal: 0,\n    },\n  ],\n];\n\nconst CONTRACT_ABIS = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"erc20Token\", type: \"address\" },\n      { internalType: \"address[]\", name: \"targets\", type: \"address[]\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"airDropBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"erc20Token\", type: \"address\" },\n      { internalType: \"address[]\", name: \"targets\", type: \"address[]\" },\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    name: \"airDropIndividual\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst ERC20_ABIS = [\n  {\n    constant: true,\n    inputs: [{ name: \"_owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ name: \"balance\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_spender\", type: \"address\" },\n      { name: \"_value\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      { name: \"_owner\", type: \"address\" },\n      { name: \"_spender\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nfunction getAllowance(\n  web3: Web3,\n  chain: number,\n  index: number,\n  owner: string | null,\n  sender: string,\n): Promise<number> {\n  if (!owner) {\n    return Promise.resolve(0);\n  }\n\n  const { address } = TOKENS[chain][index];\n\n  const erc20Contract = new web3.eth.Contract(ERC20_ABIS as AbiItem[], address);\n\n  // eslint-disable-next-line\n  return erc20Contract.methods.allowance(owner, sender).call();\n}\n\nfunction approve(\n  web3: Web3,\n  chain: number,\n  index: number,\n  from: string | null,\n  sender: string,\n  amount: bigint,\n): Promise<void> {\n  if (!from) {\n    return Promise.resolve();\n  }\n\n  const { address } = TOKENS[chain][index];\n\n  const erc20Contract = new web3.eth.Contract(ERC20_ABIS as AbiItem[], address);\n\n  // eslint-disable-next-line\n  return erc20Contract.methods.approve(sender, amount).send({ from });\n}\n\nconst SENDERS = [\n  \"0x074101c52ea69D66577057ECA07147bcF7B3f057\",\n  \"0x6Ed6e3E2B26Fb9CCf3e5344ac462136B9BbcA6F8\",\n];\n\nfunction airdrop(\n  web3: Web3,\n  chain: number,\n  index: number,\n  from: string | null,\n  toList: To[] | null,\n  defaultAmount: bigint | null,\n  decimal: number,\n  progressSetter: (_: number) => void,\n  limit: number,\n): Promise<void> {\n  if (!from || !toList) {\n    return Promise.resolve();\n  }\n  const unit = BigInt(10 ** decimal);\n\n  const { address } = TOKENS[chain][index];\n\n  const contractInstance = new web3.eth.Contract(CONTRACT_ABIS as AbiItem[], SENDERS[chain]);\n\n  const defaultTo = Array.from(\n    toList.filter((to) => to.amount === null),\n    (to) => to.address,\n  );\n  const explicitedTo = Array.from(\n    toList.filter((to) => to.amount !== null),\n    (to) => to.address,\n  );\n  const explicitedToAmount = Array.from(\n    toList.filter((to) => to.amount !== null),\n    (to) => to.amount,\n  );\n\n  const airdrops = [];\n  let progress = 0;\n  if (defaultTo.length !== 0) {\n    if (!defaultAmount) {\n      return Promise.resolve();\n    }\n    for (let i = 0; i < defaultTo.length; i += limit) {\n      const toSlice = defaultTo.slice(i, i + limit);\n      airdrops.push(\n        // eslint-disable-next-line\n        contractInstance.methods\n          .airDropBatch(address, toSlice, (defaultAmount * unit) / BigInt(10 ** 18))\n          .send({ from })\n          // eslint-disable-next-line\n          .then(() => {\n            progress += toSlice.length;\n            progressSetter(progress);\n          }),\n      );\n    }\n  }\n\n  if (explicitedTo.length !== 0) {\n    for (let i = 0; i < explicitedTo.length; i += limit) {\n      const toSlice = explicitedTo.slice(i, i + limit);\n      const amountSlice = explicitedToAmount\n        .slice(i, i + limit)\n        .map((v: bigint | null) => {\n          assert(v);\n          return (v * unit) / BigInt(10 ** 18);\n        });\n      airdrops.push(\n        // eslint-disable-next-line\n        contractInstance.methods\n          .airDropIndividual(address, toSlice, amountSlice)\n          .send({ from })\n          // eslint-disable-next-line\n          .then(() => {\n            progress += toSlice.length;\n            progressSetter(progress);\n          }),\n      );\n    }\n  }\n\n  return Promise.all(airdrops).then(EMPTY_FUNCTION);\n}\n\nexport default function Home(): React.ReactElement {\n  const ethereum = useContext<BaseProvider | null>(EthereumContext);\n  assert(ethereum);\n  // eslint-disable-next-line\n  const web3 = new Web3(ethereum as any);\n  const account = useContext<string | null>(AccountContext);\n  const chain = useContext<number>(ChainContext);\n\n  const [randomAddressesQuantity, setRandomAddressesQuantity] = useState(\"\");\n  const [minAmountRaw, setMinAmountRaw] = useState(\"\");\n  const [minAmount, setMinAmount] = useState<bigint | null>(BigInt(0));\n  const [maxAmountRaw, setMaxAmountRaw] = useState(\"\");\n  const [maxAmount, setMaxAmount] = useState<bigint | null>(BigInt(0));\n\n  const [selectedToken, setSelectedToken] = useState(0);\n  const [allowanceAmount, setAllowanceAmount] = useState<bigint>(BigInt(0));\n  const [defaultAmountRaw, setDefaultAmountRaw] = useState(\"\");\n  const [defaultAmount, setDefaultAmount] = useState<bigint | null>(null);\n  const [addressesPerTransaction, setAddressesPerTransaction] = useState(\"200\");\n  const [toRaw, setToRaw] = useState(\"\");\n  const [toList, setToList] = useState<To[] | null>(null);\n  const [isApproving, setIsApproving] = useState(false);\n  const [isGiving, setIsGiving] = useState(false);\n  const [isUpdatingAllowance, setIsUpdatingAllowance] = useState(false);\n  const [givedAddresses, setGivedAddresses] = useState(0);\n  const [decimal, setDecimal] = useState(\"\");\n\n  const token = TOKENS[chain][selectedToken];\n\n  function updateAllowance() {\n    setIsUpdatingAllowance(true);\n    getAllowance(web3, chain, selectedToken, account, SENDERS[chain])\n      .then((amount: number) => {\n        setAllowanceAmount(BigInt(amount));\n        setIsUpdatingAllowance(false);\n      }, EMPTY_FUNCTION);\n  }\n  useEffect(\n    () => {\n      updateAllowance();\n      setDecimal(String(token.decimal));\n    // eslint-disable-next-line\n    }, [selectedToken, account, chain],\n  );\n\n  function updateToRaw(raw: string) {\n    setToRaw(raw);\n    setToList(parseAddresses(raw));\n  }\n\n  const isDefaultAmountNeeded = toList !== null && toList.some((to) => to.amount === null);\n  const isDefaultAmountInvalid = !defaultAmount && isDefaultAmountNeeded;\n\n  return (\n    <Container className=\"mt-4\">\n      <Row className=\"justify-content-center\">\n        <h1>Airdrop</h1>\n      </Row>\n      <Row className=\"justify-content-center mt-3\">\n        <InputGroup hasValidation>\n          <Form.Control\n            as=\"textarea\"\n            className=\"Home__Addresses\"\n            value={toRaw}\n            onChange={(e) => updateToRaw(e.currentTarget.value)}\n            isInvalid={toList === null}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide valid addresses with/without amount.\n          </Form.Control.Feedback>\n        </InputGroup>\n      </Row>\n      <Row className=\"justify-content-center mt-3\">\n        <Col xs=\"12\" className=\"mt-3\">\n          <InputGroup>\n            <InputGroup.Text>Random addresses quantity</InputGroup.Text>\n            <Form.Control\n              value={randomAddressesQuantity}\n              placeholder=\"amount\"\n              onChange={\n                (e) => updateIntegerByStr(e.currentTarget.value, setRandomAddressesQuantity)\n              }\n            />\n          </InputGroup>\n        </Col>\n        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\n          <InputGroup>\n            <InputGroup.Text>Min amount</InputGroup.Text>\n            <Form.Control\n              value={minAmountRaw}\n              placeholder=\"amount\"\n              onChange={(e) => updateAmountByStr(\n                e.currentTarget.value,\n                setMinAmountRaw,\n                setMinAmount,\n              )}\n            />\n          </InputGroup>\n        </Col>\n        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\n          <InputGroup>\n            <InputGroup.Text>Max amount</InputGroup.Text>\n            <Form.Control\n              value={maxAmountRaw}\n              placeholder=\"amount\"\n              onChange={(e) => updateAmountByStr(\n                e.currentTarget.value,\n                setMaxAmountRaw,\n                setMaxAmount,\n              )}\n            />\n          </InputGroup>\n        </Col>\n        <Col xs=\"auto\" className=\"mt-3\">\n          <Button\n            onClick={() => {\n              assert(maxAmount && minAmount);\n              const result = [];\n              for (let i = 0; i < Number(randomAddressesQuantity); i += 1) {\n                const { address } = web3.eth.accounts.create();\n                const amount = BigInt(\n                  Math.floor(Number(maxAmount - minAmount) * Math.random()),\n                ) + minAmount;\n                result.push(`${address} ${fixedDecimalToStr(amount, Number(decimal))}`);\n              }\n              updateToRaw(result.join(\"\\n\"));\n            }}\n            disabled={!minAmount || !maxAmount || randomAddressesQuantity === \"\"}\n          >\n            Generate\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center mt-3\">\n        <Col xs=\"auto\">\n          <ButtonGroup>\n            {TOKENS[chain].map(({ id, name }) => (\n              <ToggleButton\n                key={id}\n                id={`token-${id}`}\n                name=\"tokens-radio\"\n                type=\"radio\"\n                variant=\"outline-primary\"\n                value={id}\n                checked={selectedToken === id}\n                onChange={(e) => setSelectedToken(Number(e.currentTarget.value))}\n              >\n                {name}\n              </ToggleButton>\n            ))}\n          </ButtonGroup>\n        </Col>\n        <Col xs=\"auto\" className=\"d-flex align-items-center\">\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n            className={`me-1 ${isUpdatingAllowance ? \"\" : \"d-none\"}`}\n          />\n          <p className=\"m-0\">\n            {token.address}\n            &nbsp;default decimal:&nbsp;\n            {token.decimal}\n          </p>\n        </Col>\n        <div className=\"w-100\" />\n        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\n          <InputGroup hasValidation>\n            <InputGroup.Text>Default amount</InputGroup.Text>\n            <Form.Control\n              value={defaultAmountRaw}\n              placeholder=\"amount\"\n              onChange={(e) => updateAmountByStr(\n                e.currentTarget.value,\n                setDefaultAmountRaw,\n                setDefaultAmount,\n              )}\n              isInvalid={isDefaultAmountInvalid}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide amount for default.\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Col>\n        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\n          <InputGroup>\n            <InputGroup.Text>Addresses per transaction</InputGroup.Text>\n            <Form.Control\n              value={addressesPerTransaction}\n              placeholder=\"addresses number\"\n              onChange={\n                (e) => updateIntegerByStr(e.currentTarget.value, setAddressesPerTransaction)\n              }\n            />\n          </InputGroup>\n        </Col>\n        <Col xs=\"12\" className=\"mt-3\">\n          <InputGroup>\n            <InputGroup.Text>Decimal</InputGroup.Text>\n            <Form.Control\n              value={decimal}\n              placeholder=\"decimal\"\n              onChange={(e) => {\n                const { value } = e.currentTarget;\n                updateIntegerByStr(value, setDecimal);\n                if (value === \"0\") {\n                  setDecimal(value);\n                }\n              }}\n            />\n          </InputGroup>\n        </Col>\n        <Col xs=\"auto\" className=\"mt-3\">\n          <Button\n            onClick={async () => {\n              setIsApproving(true);\n              try {\n                await approve(\n                  web3,\n                  chain,\n                  selectedToken,\n                  account,\n                  SENDERS[chain],\n                  // 2 ** 256 - 1\n                  BigInt(\"115792089237316195423570985008687907853269984665640564039457584007913129639935\"),\n                );\n              } finally {\n                setIsApproving(false);\n              }\n              updateAllowance();\n            }}\n            disabled={isApproving}\n            className={allowanceAmount !== BigInt(0) ? \"d-none\" : \"\"}\n          >\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n              className={`me-1 ${isApproving ? \"\" : \"d-none\"}`}\n            />\n            Approve\n          </Button>\n        </Col>\n        <Col xs=\"auto\" className=\"mt-3\">\n          <Button\n            variant=\"success\"\n            onClick={async () => {\n              setGivedAddresses(0);\n              setIsGiving(true);\n              try {\n                await airdrop(\n                  web3,\n                  chain,\n                  selectedToken,\n                  account,\n                  toList,\n                  defaultAmount,\n                  Number(decimal),\n                  setGivedAddresses,\n                  Number(addressesPerTransaction),\n                );\n              } finally {\n                setIsGiving(false);\n              }\n              updateAllowance();\n            }}\n            disabled={\n              toList === null\n              || isDefaultAmountInvalid\n              || isGiving\n              || !toList.every((to) => web3.utils.isAddress(to.address))\n              || allowanceAmount === BigInt(0)\n              || decimal === \"\"\n              || addressesPerTransaction === \"\"\n            }\n          >\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n              className={`me-1 ${isGiving ? \"\" : \"d-none\"}`}\n            />\n            Airdrop\n            <span className={isGiving ? \"\" : \"d-none\"}>\n              &nbsp;\n              {givedAddresses}\n              /\n              {toList?.length}\n            </span>\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col>\n          <Table>\n            <thead>\n              <tr>\n                <th>Address</th>\n                <th>Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                toList\n                  ? toList.map((to) => (\n                    <tr>\n                      <td>\n                        {to.address}\n                        <span className={`ms-4 text-danger ${web3.utils.isAddress(to.address) ? \"d-none\" : \"\"}`}>\n                          Invalid address\n                        </span>\n                      </td>\n                      <td className={to.amount ? \"\" : \"text-secondary\"}>\n                        {\n                          (() => {\n                            if (to.amount) {\n                              return fixedDecimalToStr(to.amount, Number(decimal));\n                            }\n                            if (defaultAmount) {\n                              return fixedDecimalToStr(defaultAmount, Number(decimal));\n                            }\n                            return \"\";\n                          })()\n                        }\n                      </td>\n                    </tr>\n                  ))\n                  : []\n              }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, {\n  useState,\n} from \"react\";\nimport assert from \"assert\";\n\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\n\nexport default function ToggleButtons(\n  {\n    selects,\n    groupName,\n    onChange,\n  }: {\n    selects: Array<{ id: number, value: number, name: string }>,\n    groupName: string,\n    onChange: (_: number) => void,\n  },\n): React.ReactElement {\n  const [selectedId, setSelectedId] = useState(0);\n  return (\n    <ButtonGroup className=\"flex-wrap\">\n      {selects.map(({ id, name }) => (\n        <ToggleButton\n          key={id}\n          id={`${groupName}-${id}`}\n          name={`${groupName}s-radio`}\n          type=\"radio\"\n          variant=\"outline-primary\"\n          value={id}\n          checked={selectedId === id}\n          onChange={(e) => {\n            const changeId = Number(e.currentTarget.value);\n            setSelectedId(changeId);\n            const select = selects.find((s) => s.id === changeId);\n            assert(select);\n            onChange(select.value);\n          }}\n        >\n          {name}\n        </ToggleButton>\n      ))}\n    </ButtonGroup>\n  );\n}\n","import React, {\n  useState,\n  useEffect,\n} from \"react\";\n\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { updateAmountByStr, updateIntegerByStr } from \"../../utils/utils\";\n\nexport default function RangeInput(\n  {\n    text,\n    placeholder,\n    defaultValue,\n    min,\n    max,\n    onChange,\n    decimal,\n  }: {\n    text: string,\n    placeholder: string,\n    defaultValue: string,\n    min: bigint,\n    max: bigint | null,\n    onChange: (_: bigint | null) => void,\n    decimal?: number,\n  },\n): React.ReactElement {\n  const [raw, setRaw] = useState(defaultValue);\n  const [isInvalid, setIsInvalid] = useState(false);\n\n  function update(value: string) {\n    if (!decimal || decimal === 0) {\n      updateIntegerByStr(value, setRaw, (v) => {\n        if (v === null || v < min || (max !== null && max <= v)) {\n          onChange(null);\n          setIsInvalid(true);\n        } else {\n          onChange(v);\n          setIsInvalid(false);\n        }\n      });\n    } else {\n      updateAmountByStr(value, setRaw, (v) => {\n        if (\n          v === null\n          || v < min * BigInt(10 ** 18)\n          || (max !== null && max * BigInt(10 ** 18) <= v)\n        ) {\n          onChange(null);\n          setIsInvalid(true);\n        } else {\n          onChange((v * BigInt(10 ** decimal)) / BigInt(10 ** 18));\n          setIsInvalid(false);\n        }\n      });\n    }\n  }\n\n  // eslint-disable-next-line\n  useEffect(() => update(defaultValue), [defaultValue]);\n\n  return (\n    <InputGroup hasValidation>\n      <InputGroup.Text>{text}</InputGroup.Text>\n      <Form.Control\n        value={raw}\n        placeholder={placeholder}\n        onChange={\n          (e) => {\n            const { value } = e.currentTarget;\n            update(value);\n          }\n        }\n        isInvalid={isInvalid}\n      />\n    </InputGroup>\n  );\n}\n\nRangeInput.defaultProps = {\n  decimal: 0,\n};\n","import \"./NFT.scss\";\n\nimport React, {\n  useState,\n  useContext,\n  useEffect,\n} from \"react\";\nimport Web3 from \"web3\";\nimport { AbiItem, hexToUtf8 } from \"web3-utils\";\nimport assert from \"assert\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { BaseProvider } from \"@metamask/providers\";\n\nimport ToggleButtons from \"../../components/ToggleButtons/ToggleButtons\";\nimport RangeInput from \"../../components/RangeInput/RangeInput\";\n\nimport {\n  EthereumContext,\n  AccountContext,\n  ChainContext,\n  EMPTY_FUNCTION,\n} from \"../../utils/utils\";\n\nfunction parseAddresses(raw: string): string[] | null {\n  const toList: string[] = [];\n\n  const isValid = raw\n    .replaceAll(\",\", \" \")\n    .replaceAll(\"\\n\", \" \")\n    .replaceAll('\"', \"\")\n    .replaceAll(\"'\", \"\")\n    .replaceAll(\"`\", \"\")\n    .replaceAll(/  */g, \" \")\n    .trim()\n    .split(\" \")\n    .every((value) => {\n      if (!value.startsWith(\"0x\")) {\n        return false;\n      }\n      toList.push(value);\n      return true;\n    });\n\n  if (isValid) {\n    return toList;\n  }\n\n  return null;\n}\n\nconst CONTRACT_ABIS = [\n  {\n    inputs: [\n      { internalType: \"address[]\", name: \"owners\", type: \"address[]\" },\n      { internalType: \"uint256\", name: \"intentionQuality\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"intention\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"level\", type: \"uint256\" },\n      { internalType: \"uint256[]\", name: \"specificValues\", type: \"uint256[]\" },\n      { internalType: \"uint256\", name: \"skin\", type: \"uint256\" },\n    ],\n    name: \"forgeMaintainer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address[]\", name: \"owners\", type: \"address[]\" },\n      { internalType: \"uint256\", name: \"intention\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"level\", type: \"uint256\" },\n      { internalType: \"uint256[]\", name: \"specificValues\", type: \"uint256[]\" },\n    ],\n    name: \"forgeCaptainMaintainer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"skinRegistry\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"bytes32\", name: \"description\", type: \"bytes32\" },\n          { internalType: \"uint256\", name: \"skinStats\", type: \"uint256\" },\n        ],\n        internalType: \"struct CelestialNFTManagerType.SkinEntry[]\",\n        name: \"skinEntry\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst NFTS = [\n  { id: 0, value: 0, name: \"Warship\" },\n  { id: 1, value: 1, name: \"Captain\" },\n];\n\nconst QUALITIES = [\n  { id: 0, value: 40000, name: \"Purple\" },\n  { id: 1, value: 50000, name: \"Gold\" },\n];\n\nconst INTENTIONS = [\n  { id: 0, value: 1, name: \"Min\" },\n  { id: 1, value: 2, name: \"Mean\" },\n  { id: 2, value: 3, name: \"Max\" },\n  { id: 3, value: 4, name: \"Random\" },\n  { id: 4, value: 5, name: \"Specific\" },\n];\n\nconst WARSHIP_SPECIFIC_VALUES = [\n  {\n    id: 0,\n    name: \"exploitation\",\n    range: [[10, 41], [50, 121]],\n    decimal: 18,\n  },\n  {\n    id: 1,\n    name: \"exploitation percent\",\n    range: [[1, 3], [3, 6]],\n    decimal: 0,\n  },\n  {\n    id: 2,\n    name: \"attack\",\n    range: [[400, 1000], [1500, 3000]],\n    decimal: 18,\n  },\n  {\n    id: 3,\n    name: \"attack percent\",\n    range: [[1, 3], [3, 6]],\n    decimal: 0,\n  },\n  {\n    id: 4,\n    name: \"defense\",\n    range: [[100, 300], [500, 1000]],\n    decimal: 18,\n  },\n  {\n    id: 5,\n    name: \"defense percent\",\n    range: [[1, 3], [3, 6]],\n    decimal: 0,\n  },\n];\n\nconst CAPTAIN_SPECIFIC_VALUES = [\n  {\n    id: 0,\n    name: \"race\",\n    range: [1, 4],\n    decimal: 0,\n  },\n  {\n    id: 1,\n    name: \"luck\",\n    range: [10, 16],\n    decimal: 18,\n  },\n  {\n    id: 2,\n    name: \"accuracy\",\n    range: [60, 81],\n    decimal: 18,\n  },\n  {\n    id: 3,\n    name: \"dodge\",\n    range: [10, 21],\n    decimal: 18,\n  },\n  {\n    id: 4,\n    name: \"intelligence\",\n    range: [20, 26],\n    decimal: 18,\n  },\n];\n\nconst SKINS = [\n  { id: 0, name: \"Null\", value: 0 },\n  { id: 1, name: \"OKEX rare\", value: 1 },\n  { id: 2, name: \"OKEX epic\", value: 2 },\n  { id: 3, name: \"OKEX association\", value: 3 },\n  { id: 4, name: \"Fengyun\", value: 4 },\n  { id: 5, name: \"CMC\", value: 5 },\n  { id: 6, name: \"OKEX\", value: 6 },\n  { id: 7, name: \"Peter\", value: 7 },\n  { id: 8, name: \"Hyper Pay\", value: 8 },\n  { id: 9, name: \"Coin Wind\", value: 9 },\n  { id: 10, name: \"Panda Swap\", value: 10 },\n  { id: 11, name: \"IOTX\", value: 11 },\n  { id: 12, name: \"MARS\", value: 12 },\n  { id: 13, name: \"Onto\", value: 13 },\n  { id: 14, name: \"MAC\", value: 14 },\n  { id: 15, name: \"Christmas\", value: 15 },\n  { id: 16, name: \"Wing\", value: 16 },\n  { id: 17, name: \"OneCash\", value: 17 },\n  { id: 18, name: \"MOVE\", value: 18 },\n  { id: 19, name: \"Golff\", value: 19 },\n  { id: 20, name: \"Bitmart\", value: 20 },\n  { id: 21, name: \"element\", value: 21 },\n  { id: 22, name: \"MAC for Xmas special\", value: 22 },\n  { id: 23, name: \"Nabox\", value: 23 },\n  { id: 24, name: \"Ontology\", value: 24 },\n];\n\nconst SENDERS = [\n  \"0x3a9AF5ea13625984EFFBf0cCc1c72580e3e3b7F1\",\n  \"0x3A194300A253597a1572b63D350074B9DA3C9039\",\n];\n\nfunction airdropMaintainer(\n  web3: Web3,\n  chain: number,\n  from: string | null,\n  toList: string[] | null,\n  quality: number,\n  intention: number,\n  level: number,\n  specificValues: Array<bigint | null>,\n  skin: number,\n  progressSetter: (_: number) => void,\n  limit: number,\n): Promise<void> {\n  if (!from || !toList || specificValues.some((e) => !e)) {\n    return Promise.resolve();\n  }\n\n  const contractInstance = new web3.eth.Contract(CONTRACT_ABIS as AbiItem[], SENDERS[chain]);\n\n  const airdrops = [];\n  let progress = 0;\n  for (let i = 0; i < toList.length; i += limit) {\n    const toSlice = toList.slice(i, i + limit);\n    airdrops.push(\n      // eslint-disable-next-line\n      contractInstance.methods\n        .forgeMaintainer(toSlice, quality, intention, level, specificValues, skin)\n        .send({ from })\n        // eslint-disable-next-line\n        .then(() => {\n          progress += toSlice.length;\n          progressSetter(progress);\n        }),\n    );\n  }\n\n  return Promise.all(airdrops).then(EMPTY_FUNCTION);\n}\n\nfunction airdropCaptainMaintainer(\n  web3: Web3,\n  chain: number,\n  from: string | null,\n  toList: string[] | null,\n  intention: number,\n  level: number,\n  specificValues: Array<bigint | null>,\n  progressSetter: (_: number) => void,\n  limit: number,\n): Promise<void> {\n  if (!from || !toList || specificValues.some((e) => !e)) {\n    return Promise.resolve();\n  }\n\n  const contractInstance = new web3.eth.Contract(CONTRACT_ABIS as AbiItem[], SENDERS[chain]);\n\n  const airdrops = [];\n  let progress = 0;\n  for (let i = 0; i < toList.length; i += limit) {\n    const toSlice = toList.slice(i, i + limit);\n    airdrops.push(\n      // eslint-disable-next-line\n      contractInstance.methods\n        .forgeCaptainMaintainer(toSlice, intention, level, specificValues)\n        .send({ from })\n        // eslint-disable-next-line\n        .then(() => {\n          progress += toSlice.length;\n          progressSetter(progress);\n        }),\n    );\n  }\n\n  return Promise.all(airdrops).then(EMPTY_FUNCTION);\n}\n\nexport default function NFT(): React.ReactElement {\n  const ethereum = useContext<BaseProvider | null>(EthereumContext);\n  assert(ethereum);\n  // eslint-disable-next-line\n  const web3 = new Web3(ethereum as any);\n  const account = useContext<string | null>(AccountContext);\n  const chain = useContext<number>(ChainContext);\n\n  const [selectedNFT, setSelectedNFT] = useState(0);\n  const [selectedQuality, setSelectedQuality] = useState(40000);\n  const [selectedIntention, setSelectedIntention] = useState(1);\n  const [specificValues, setSpecificValues] = useState<Array<bigint | null>>([\n    null, null, null, null, null, null,\n  ]);\n  const [selectedSkin, setSelectedSkin] = useState(0);\n  const [skins, setSkins] = useState(SKINS);\n  const [level, setLevel] = useState<bigint | null>(null);\n  const [addressesPerTransaction, setAddressesPerTransaction] = useState<bigint | null>(BigInt(50));\n  const [toList, setToList] = useState<string[] | null>(null);\n  const [isGiving, setIsGiving] = useState(false);\n  const [givedAddresses, setGivedAddresses] = useState(0);\n\n  const specificValuesInvalid = (\n    selectedIntention === 5\n    && (\n      (selectedNFT === 0 && specificValues.slice(0, 6).some((e) => e === null))\n      || (\n        selectedNFT === 1\n        && specificValues.slice(0, 5).some((e) => e === null)\n      )\n    )\n  );\n\n  useEffect(() => {\n    const contractInstance = new web3.eth.Contract(CONTRACT_ABIS as AbiItem[], SENDERS[chain]);\n\n    // eslint-disable-next-line\n    contractInstance.methods\n      .skinRegistry()\n      .call()\n      // eslint-disable-next-line\n      .then(\n        (skinResult: Array<{ description: string, skinStats: string }>) => setSkins(\n          skinResult.map(({ description, skinStats }, index) => ({\n            id: index,\n            name: hexToUtf8(description),\n            value: Number(skinStats),\n          })),\n        ),\n      );\n  // eslint-disable-next-line\n  }, [ethereum, chain]);\n\n  return (\n    <Container className=\"mt-4\">\n      <Row className=\"justify-content-center\">\n        <h1>NFT airdrop</h1>\n      </Row>\n      <Row className=\"justify-content-center mt-3\">\n        <InputGroup hasValidation>\n          <Form.Control\n            as=\"textarea\"\n            className=\"NFT__Addresses\"\n            onChange={(e) => setToList(parseAddresses(e.currentTarget.value))}\n            isInvalid={toList === null}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide valid addresses.\n          </Form.Control.Feedback>\n        </InputGroup>\n      </Row>\n      <Row className=\"justify-content-center mt-3\">\n        <Col xs=\"auto\">\n          <ToggleButtons selects={NFTS} groupName=\"nft\" onChange={setSelectedNFT} />\n        </Col>\n        <Col xs=\"auto\" className={selectedNFT === 0 ? \"\" : \"d-none\"}>\n          <ToggleButtons selects={QUALITIES} groupName=\"quality\" onChange={setSelectedQuality} />\n        </Col>\n        <Col xs=\"auto\">\n          <ToggleButtons selects={INTENTIONS} groupName=\"intention\" onChange={setSelectedIntention} />\n        </Col>\n        <Col xs=\"12\" className={selectedNFT === 0 ? \"mt-3\" : \"d-none\"}>\n          <ToggleButtons selects={skins} groupName=\"skin\" onChange={setSelectedSkin} />\n        </Col>\n        <div className=\"w-100\" />\n        {\n          selectedIntention === 5\n          && selectedNFT === 0\n          && WARSHIP_SPECIFIC_VALUES.map(({\n            id,\n            name,\n            range,\n            decimal,\n          }) => {\n            const [min, max] = selectedQuality === 40000 ? range[0] : range[1];\n            return (\n              <Col xs=\"12\" md=\"6\" className=\"mt-3\" key={id}>\n                <RangeInput\n                  text={name}\n                  placeholder={`${BigInt(min)} ~ ${BigInt(max)}`}\n                  defaultValue={String(min)}\n                  min={BigInt(min)}\n                  max={BigInt(max)}\n                  decimal={decimal}\n                  onChange={(v) => setSpecificValues((o) => {\n                    const result = [...o];\n                    result[id] = v;\n                    return result;\n                  })}\n                />\n              </Col>\n            );\n          })\n        }\n        {\n          selectedIntention === 5\n          && selectedNFT === 1\n          && CAPTAIN_SPECIFIC_VALUES.map(({\n            id,\n            name,\n            range,\n            decimal,\n          }) => {\n            const [min, max] = range;\n            return (\n              <Col xs=\"12\" md=\"6\" className=\"mt-3\" key={id}>\n                <RangeInput\n                  text={name}\n                  placeholder={`${BigInt(min)} ~ ${BigInt(max)}`}\n                  defaultValue={String(min)}\n                  min={BigInt(min)}\n                  max={BigInt(max)}\n                  decimal={decimal}\n                  onChange={(v) => setSpecificValues((o) => {\n                    const result = [...o];\n                    result[id] = v;\n                    return result;\n                  })}\n                />\n              </Col>\n            );\n          })\n        }\n        <div className=\"w-100\" />\n        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\n          <RangeInput\n            text=\"Level\"\n            placeholder=\"level number\"\n            defaultValue=\"\"\n            min={BigInt(1)}\n            max={BigInt(31)}\n            onChange={setLevel}\n          />\n        </Col>\n        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\n          <RangeInput\n            text=\"Addresses per transaction\"\n            placeholder=\"addresses number\"\n            defaultValue=\"50\"\n            min={BigInt(1)}\n            max={null}\n            onChange={setAddressesPerTransaction}\n          />\n        </Col>\n        <Col xs=\"auto\" className=\"mt-3\">\n          <Button\n            variant=\"success\"\n            onClick={async () => {\n              setGivedAddresses(0);\n              setIsGiving(true);\n              try {\n                if (selectedNFT === 0) {\n                  await airdropMaintainer(\n                    web3,\n                    chain,\n                    account,\n                    toList,\n                    selectedQuality,\n                    selectedIntention,\n                    Number(level),\n                    selectedIntention === 5 ? specificValues : [],\n                    selectedSkin,\n                    setGivedAddresses,\n                    Number(addressesPerTransaction),\n                  );\n                } else {\n                  await airdropCaptainMaintainer(\n                    web3,\n                    chain,\n                    account,\n                    toList,\n                    selectedIntention,\n                    Number(level),\n                    selectedIntention === 5 ? specificValues.slice(0, 5) : [],\n                    setGivedAddresses,\n                    Number(addressesPerTransaction),\n                  );\n                }\n              } finally {\n                setIsGiving(false);\n              }\n            }}\n            disabled={\n              toList === null\n              || isGiving\n              || !toList.every((to) => web3.utils.isAddress(to))\n              || !level\n              || specificValuesInvalid\n            }\n          >\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n              className={`me-1 ${isGiving ? \"\" : \"d-none\"}`}\n            />\n            Airdrop\n            <span className={isGiving ? \"\" : \"d-none\"}>\n              &nbsp;\n              {givedAddresses}\n              /\n              {toList?.length}\n            </span>\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col>\n          <Table>\n            <thead>\n              <tr>\n                <th>Address</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                toList\n                  ? toList.map((to) => (\n                    <tr>\n                      <td>\n                        {to}\n\n                        <span className={`ms-4 text-danger ${web3.utils.isAddress(to) ? \"d-none\" : \"\"}`}>\n                          Invalid address\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                  : []\n              }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\n\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Home from \"./views/Home/Home\";\nimport NFT from \"./views/NFT/NFT\";\n\nexport default function Routes(): React.ReactElement {\n  return (\n    <Switch>\n      <Route path=\"/nft\">\n        <NFT />\n      </Route>\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n      <Route path=\"/\">\n        <Redirect to=\"/home\" />\n      </Route>\n    </Switch>\n  );\n}\n","import \"./App.scss\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { HashRouter, NavLink } from \"react-router-dom\";\n\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { BaseProvider } from \"@metamask/providers\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Row from \"react-bootstrap/Row\";\n\nimport {\n  EthereumContext,\n  AccountContext,\n  ChainContext,\n  EMPTY_FUNCTION,\n} from \"./utils/utils\";\n\nimport Routes from \"./Routes\";\n\nconst ERROR_NETWORK_NOT_ADDED = 4902;\n\nconst CHAINS = [\n  {\n    chainId: \"0x42\",\n    chainName: \"OKExChain Mainnet\",\n    nativeCurrency: { name: \"OKT\", symbol: \"OKT\", decimals: 18 },\n    rpcUrls: [\"https://exchainrpc.okex.org\"],\n    blockExplorerUrls: [\"https://www.oklink.com/okexchain\"],\n  },\n  {\n    chainId: \"0x38\",\n    chainName: \"Binance Smart Chain\",\n    nativeCurrency: { name: \"BNB\", symbol: \"BNB\", decimals: 18 },\n    rpcUrls: [\"https://bsc-dataseed.binance.org\"],\n    blockExplorerUrls: [\"https://bscscan.com/\"],\n  },\n];\n\nasync function switchToChain(ethereum: BaseProvider, selectedChain: number) {\n  try {\n    await ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: CHAINS[selectedChain].chainId }],\n    });\n  } catch (switchError) {\n    const { code }: { code: number } = switchError as { code: number };\n\n    if (code !== ERROR_NETWORK_NOT_ADDED) {\n      return code;\n    }\n  }\n\n  return null;\n}\n\nasync function prepareChain(ethereum: BaseProvider, selectedChain: number) {\n  const switched = await switchToChain(ethereum, selectedChain);\n  if (switched && switched !== ERROR_NETWORK_NOT_ADDED) {\n    return null;\n  }\n\n  try {\n    await ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [CHAINS[selectedChain]],\n    });\n  } catch (addError) {\n    return null;\n  }\n\n  if (await switchToChain(ethereum, selectedChain) === null) {\n    return selectedChain;\n  }\n\n  return null;\n}\n\nfunction App(): React.ReactElement {\n  const [ethereum, setEthereum] = useState<BaseProvider | null>(null);\n  const [account, setAccount] = useState<string | null>(null);\n  const [isOnChain, setIsOnChain] = useState(false);\n  const [selectedChain, setSelectedChain] = useState(0);\n  const [currentChain, setCurrentChain] = useState(0);\n\n  detectEthereumProvider()\n    .then(\n      (provider) => { (setEthereum as (_: unknown) => void)(provider); },\n      EMPTY_FUNCTION,\n    );\n\n  const updateSelectedAccount = useCallback(\n    () => {\n      if (!ethereum) {\n        return;\n      }\n\n      setAccount(ethereum.selectedAddress);\n    },\n    [ethereum],\n  );\n\n  function connect() {\n    if (!ethereum) {\n      return;\n    }\n    ethereum.request({ method: \"eth_requestAccounts\" })\n      .then(updateSelectedAccount, EMPTY_FUNCTION);\n  }\n\n  useEffect(\n    () => {\n      if (!ethereum) {\n        return EMPTY_FUNCTION;\n      }\n\n      ethereum.request({ method: \"eth_accounts\" })\n        .then(updateSelectedAccount, EMPTY_FUNCTION);\n\n      ethereum.on(\"accountsChanged\", updateSelectedAccount);\n      return () => {\n        ethereum.removeListener(\"accountsChanged\", updateSelectedAccount);\n      };\n    },\n    [ethereum, updateSelectedAccount],\n  );\n\n  useEffect(\n    () => {\n      if (!ethereum) {\n        return;\n      }\n\n      prepareChain(ethereum, selectedChain).then((chainId) => {\n        setIsOnChain(chainId !== null);\n        if (chainId !== null) {\n          setCurrentChain(chainId);\n        }\n      }, EMPTY_FUNCTION);\n    },\n    [ethereum, selectedChain],\n  );\n\n  if (!ethereum) {\n    return <div>You must installed MetaMask to use Celestial dashboard!</div>;\n  }\n\n  if (!isOnChain) {\n    return (<div>You are not on chain!</div>);\n  }\n\n  if (!account) {\n    return (\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col xs=\"auto\">You must connect to MetaMask to use Celestial dashboard!</Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col xs=\"auto\">\n            <Button onClick={() => connect()}>Connect</Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <EthereumContext.Provider value={ethereum}>\n      <AccountContext.Provider value={account}>\n        <ChainContext.Provider value={currentChain}>\n          <HashRouter>\n            <Navbar>\n              <Container>\n                <Nav className=\"align-items-center\">\n                  <NavLink to=\"/home\" className=\"me-3 text-decoration-none\">\n                    Airdrop\n                  </NavLink>\n                  <NavLink to=\"/nft\" className=\"me-3 text-decoration-none text-nowrap\">\n                    NFT airdrop\n                  </NavLink>\n                  <Form.Select\n                    defaultValue=\"0\"\n                    onChange={(e) => setSelectedChain(Number(e.target.value))}\n                  >\n                    <option value=\"0\">OKEx</option>\n                    <option value=\"1\">BSC</option>\n                  </Form.Select>\n                </Nav>\n                <Navbar.Brand>{account}</Navbar.Brand>\n              </Container>\n            </Navbar>\n            <Routes />\n          </HashRouter>\n        </ChainContext.Provider>\n      </AccountContext.Provider>\n    </EthereumContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}