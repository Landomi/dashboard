{"version":3,"sources":["utils/utils.ts","views/Home/Home.tsx","App.tsx","index.jsx"],"names":["EthereumContext","createContext","useMountState","callback","useEffect","ERROR_NETWORK_NOT_ADDED","CHAIN_ID","switchToChain","ethereum","a","request","method","params","chainId","code","switched","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","validatePositiveInteger","raw","value","Number","String","isInteger","updateAmountByStr","setter","To","address","amount","this","TOKENS","id","decimal","CONTRACT_ABIS","inputs","internalType","type","outputs","stateMutability","ERC20_ABIS","constant","payable","approve","web3","index","from","sender","Promise","resolve","eth","Contract","methods","send","SENDER","EMPTY_FUNCTION","airdrop","toList","defaultAmount","batchPromise","individualPromise","contractInstance","defaultTo","Array","filter","to","explicitedTo","explicitedToAmount","length","airDropBatch","airDropIndividual","all","then","Home","useContext","assert","Web3","useState","selectedAccount","setSelectedAccount","isOnChain","setIsOnChain","selectedToken","setSelectedToken","allowanceAmount","setAllowanceAmount","setDefaultAmount","approveAmount","setApproveAmount","setToList","isApproving","setIsApproving","isGiving","setIsGiving","isUpdatingAllowance","setIsUpdatingAllowance","updateSelectedAccount","selectedAddress","updateAllowance","owner","allowance","call","getAllowance","on","removeListener","prepareChain","isDefaultAmountNeeded","some","isDefaultAmountInvalid","canGive","Container","className","Row","InputGroup","hasValidation","Form","Control","as","onChange","e","previousAddress","replaceAll","trim","toLowerCase","split","every","startsWith","push","parseAddresses","currentTarget","isInvalid","Feedback","Col","xs","ButtonGroup","map","ToggleButton","variant","checked","Spinner","animation","size","role","md","Text","placeholder","Button","onClick","disabled","Table","App","setEthereum","detectEthereumProvider","provider","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8747c840.chunk.js","sourcesContent":["import { createContext, useEffect } from \"react\";\n\nimport { BaseProvider } from \"@metamask/providers\";\n\nexport const EthereumContext = createContext<BaseProvider | null>(null);\n\nexport function useMountState(callback: () => void): void {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(callback, []);\n}\n","import \"./Home.scss\";\n\nimport React, {\n  useState,\n  useContext,\n  useEffect,\n} from \"react\";\nimport Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport assert from \"assert\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Table from \"react-bootstrap/Table\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\n\nimport { BaseProvider } from \"@metamask/providers\";\n\nimport { EthereumContext, useMountState } from \"../../utils/utils\";\n\nconst ERROR_NETWORK_NOT_ADDED = 4902;\nconst CHAIN_ID = \"0x42\";\n\nasync function switchToChain(ethereum: BaseProvider) {\n  try {\n    await ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: CHAIN_ID }],\n    });\n  } catch (switchError) {\n    const { code }: { code: number } = switchError as { code: number };\n\n    if (code !== ERROR_NETWORK_NOT_ADDED) {\n      return code;\n    }\n  }\n\n  return null;\n}\n\nasync function prepareChain(ethereum: BaseProvider) {\n  const switched = await switchToChain(ethereum);\n  if (switched && switched !== ERROR_NETWORK_NOT_ADDED) {\n    return false;\n  }\n\n  try {\n    await ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [{\n        chainId: CHAIN_ID,\n        chainName: \"OKExChain Mainnet\",\n        nativeCurrency: { name: \"OKT\", symbol: \"OKT\", decimals: 18 },\n        rpcUrls: [\"https://exchainrpc.okex.org\"],\n        blockExplorerUrls: [\"https://www.oklink.com/okexchain\"],\n      }],\n    });\n  } catch (addError) {\n    return false;\n  }\n\n  return !(await switchToChain(ethereum));\n}\n\nfunction validatePositiveInteger(raw: string): number | null {\n  const value = Number(raw);\n  if (String(value) === raw && Number.isInteger(value) && value > 0) {\n    return value;\n  }\n\n  return null;\n}\n\nfunction updateAmountByStr(raw: string, setter: (_: string) => void) {\n  if (raw === \"\" || validatePositiveInteger(raw) !== null) {\n    setter(raw);\n  }\n}\n\nclass To {\n  address: string;\n\n  amount: number | null;\n\n  constructor(address: string, amount: number | null) {\n    this.address = address;\n    this.amount = amount;\n  }\n}\n\nfunction parseAddresses(raw: string): To[] | null {\n  const toList: To[] = [];\n  let previousAddress: To | null = null;\n\n  const isValid = raw\n    .replaceAll(\",\", \" \")\n    .replaceAll(\"\\n\", \" \")\n    .replaceAll('\"', \"\")\n    .replaceAll(\"'\", \"\")\n    .replaceAll(\"`\", \"\")\n    .replaceAll(/  */g, \" \")\n    .trim()\n    .toLowerCase()\n    .split(\" \")\n    .every((value) => {\n      if (value.startsWith(\"0x\")) {\n        previousAddress = new To(value, null);\n        toList.push(previousAddress);\n      } else if (validatePositiveInteger(value)) {\n        if (previousAddress === null || previousAddress.amount !== null) {\n          return false;\n        }\n        previousAddress.amount = Number(value);\n      } else {\n        return false;\n      }\n      return true;\n    });\n\n  if (isValid) {\n    return toList;\n  }\n\n  return null;\n}\n\nconst TOKENS = [\n  {\n    id: 0,\n    name: \"Celt\",\n    address: \"0x5Ab622494AB7C5e81911558c9552DBd517F403fb\",\n    decimal: 18,\n  },\n  {\n    id: 1,\n    name: \"Crystal\",\n    address: \"0xBD87c06D865a3717A16041aCD8d33922e60E85CE\",\n    decimal: 18,\n  },\n  {\n    id: 2,\n    name: \"CeltChest\",\n    address: \"0x777c5a7152F999B4bBC26295C65a0ACb066f75e9\",\n    decimal: 0,\n  },\n];\n\nconst CONTRACT_ABIS = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"erc20Token\", type: \"address\" },\n      { internalType: \"address[]\", name: \"targets\", type: \"address[]\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"airDropBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"erc20Token\", type: \"address\" },\n      { internalType: \"address[]\", name: \"targets\", type: \"address[]\" },\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    name: \"airDropIndividual\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst ERC20_ABIS = [\n  {\n    constant: true,\n    inputs: [{ name: \"_owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ name: \"balance\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_spender\", type: \"address\" },\n      { name: \"_value\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      { name: \"_owner\", type: \"address\" },\n      { name: \"_spender\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nfunction getAllowance(\n  web3: Web3,\n  index: number,\n  owner: string | null,\n  sender: string,\n): Promise<number> {\n  if (!owner) {\n    return Promise.resolve(0);\n  }\n\n  const { address } = TOKENS[index];\n\n  const erc20Contract = new web3.eth.Contract(ERC20_ABIS as AbiItem[], address);\n\n  // eslint-disable-next-line\n  return erc20Contract.methods.allowance(owner, sender).call();\n}\n\nfunction approve(\n  web3: Web3,\n  index: number,\n  from: string | null,\n  sender: string,\n  amount: number,\n): Promise<void> {\n  if (!from) {\n    return Promise.resolve();\n  }\n\n  const { address } = TOKENS[index];\n\n  const erc20Contract = new web3.eth.Contract(ERC20_ABIS as AbiItem[], address);\n\n  // eslint-disable-next-line\n  return erc20Contract.methods.approve(sender, amount).send({ from });\n}\n\nconst SENDER = \"0x074101c52ea69D66577057ECA07147bcF7B3f057\";\n\nfunction EMPTY_FUNCTION() { /* ignore promise handling */ }\n\nfunction airdrop(\n  web3: Web3,\n  index: number,\n  from: string | null,\n  toList: To[] | null,\n  defaultAmount: number,\n): Promise<void> {\n  if (!from || !toList) {\n    return Promise.resolve();\n  }\n\n  const { address } = TOKENS[index];\n\n  const contractInstance = new web3.eth.Contract(CONTRACT_ABIS as AbiItem[], SENDER);\n\n  const defaultTo = Array.from(\n    toList.filter((to) => to.amount === null),\n    (to) => to.address,\n  );\n  const explicitedTo = Array.from(\n    toList.filter((to) => to.amount !== null),\n    (to) => to.address,\n  );\n  const explicitedToAmount = Array.from(\n    toList.filter((to) => to.amount !== null),\n    (to) => to.amount,\n  );\n\n  let batchPromise;\n  let individualPromise;\n\n  if (defaultTo.length !== 0) {\n    // eslint-disable-next-line\n    batchPromise = contractInstance.methods\n      .airDropBatch(address, defaultTo, defaultAmount)\n      .send({ from });\n  }\n\n  if (explicitedTo.length !== 0) {\n    // eslint-disable-next-line\n    individualPromise = contractInstance.methods\n      .airDropIndividual(address, explicitedTo, explicitedToAmount)\n      .send({ from });\n  }\n\n  return Promise.all([batchPromise, individualPromise]).then(EMPTY_FUNCTION);\n}\n\nexport default function Home(): React.ReactElement {\n  const ethereum = useContext<BaseProvider | null>(EthereumContext);\n  assert(ethereum);\n  // eslint-disable-next-line\n  const web3 = new Web3(ethereum as any);\n\n  const [selectedAccount, setSelectedAccount] = useState<string | null>(\"\");\n  const [isOnChain, setIsOnChain] = useState(false);\n  const [selectedToken, setSelectedToken] = useState(0);\n  const [allowanceAmount, setAllowanceAmount] = useState(0);\n  const [defaultAmount, setDefaultAmount] = useState(\"\");\n  const [approveAmount, setApproveAmount] = useState(\"\");\n  const [toList, setToList] = useState<To[] | null>(null);\n  const [isApproving, setIsApproving] = useState(false);\n  const [isGiving, setIsGiving] = useState(false);\n  const [isUpdatingAllowance, setIsUpdatingAllowance] = useState(false);\n\n  function updateSelectedAccount() {\n    assert(ethereum);\n    setSelectedAccount(ethereum.selectedAddress);\n  }\n  useEffect(updateSelectedAccount, [ethereum, ethereum.selectedAddress]);\n  useMountState(\n    () => {\n      ethereum.on(\"accountsChanged\", updateSelectedAccount);\n      return () => {\n        ethereum.removeListener(\"accountsChanged\", updateSelectedAccount);\n      };\n    },\n  );\n\n  function updateAllowance() {\n    setIsUpdatingAllowance(true);\n    getAllowance(web3, selectedToken, selectedAccount, SENDER)\n      .then((amount: number) => {\n        setAllowanceAmount(amount);\n        setIsUpdatingAllowance(false);\n      }, EMPTY_FUNCTION);\n  }\n  // eslint-disable-next-line\n  useEffect(updateAllowance, [selectedToken, selectedAccount]);\n\n  useMountState(\n    () => { prepareChain(ethereum).then(setIsOnChain, EMPTY_FUNCTION); },\n  );\n\n  if (!isOnChain) {\n    return (<div>You are not on chain!</div>);\n  }\n\n  const isDefaultAmountNeeded = toList !== null && toList.some((to) => to.amount === null);\n  const isDefaultAmountInvalid = defaultAmount === \"\" && isDefaultAmountNeeded;\n\n  const canGive = toList !== null && !isDefaultAmountInvalid;\n\n  return (\n    <Container className=\"mt-4\">\n      <Row className=\"justify-content-end\">\n        {selectedAccount}\n      </Row>\n      <Row className=\"justify-content-center\">\n        <h1>Airdrop</h1>\n      </Row>\n      <Row className=\"justify-content-center mt-3\">\n        <InputGroup hasValidation>\n          <Form.Control\n            as=\"textarea\"\n            className=\"Home__Addresses\"\n            onChange={(e) => setToList(parseAddresses(e.currentTarget.value))}\n            isInvalid={toList === null}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide valid addresses with/without amount.\n          </Form.Control.Feedback>\n        </InputGroup>\n      </Row>\n      <Row className=\"justify-content-center mt-3\">\n        <Col xs=\"auto\">\n          <ButtonGroup>\n            {TOKENS.map(({ id, name }) => (\n              <ToggleButton\n                key={id}\n                id={`token-${id}`}\n                name=\"tokens-radio\"\n                type=\"radio\"\n                variant=\"outline-primary\"\n                value={id}\n                checked={selectedToken === id}\n                onChange={(e) => setSelectedToken(Number(e.currentTarget.value))}\n              >\n                {name}\n              </ToggleButton>\n            ))}\n          </ButtonGroup>\n        </Col>\n        <Col xs=\"auto\" className=\"d-flex align-items-center\">\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n            className={`me-1 ${isUpdatingAllowance ? \"\" : \"d-none\"}`}\n          />\n          <p className=\"m-0\">\n            Allownance amount: &nbsp;\n            {allowanceAmount}\n            &nbsp;(decimal:&nbsp;\n            {TOKENS[selectedToken].decimal}\n            )\n          </p>\n        </Col>\n        <div className=\"w-100\" />\n        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\n          <InputGroup hasValidation>\n            <InputGroup.Text>Default amount</InputGroup.Text>\n            <Form.Control\n              value={defaultAmount}\n              placeholder=\"amount\"\n              onChange={(e) => updateAmountByStr(e.currentTarget.value, setDefaultAmount)}\n              isInvalid={isDefaultAmountInvalid}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide amount for default.\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Col>\n        <Col xs=\"12\" md=\"6\" className=\"mt-3\">\n          <InputGroup>\n            <InputGroup.Text>Approve amount</InputGroup.Text>\n            <Form.Control\n              value={approveAmount}\n              placeholder=\"amount\"\n              onChange={(e) => updateAmountByStr(e.currentTarget.value, setApproveAmount)}\n            />\n          </InputGroup>\n        </Col>\n        <Col xs=\"auto\" className=\"mt-3\">\n          <Button\n            onClick={async () => {\n              setIsApproving(true);\n              try {\n                await approve(web3, selectedToken, selectedAccount, SENDER, Number(approveAmount));\n              } finally {\n                setIsApproving(false);\n              }\n              updateAllowance();\n            }}\n            disabled={approveAmount === \"\" || isApproving}\n          >\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n              className={`me-1 ${isApproving ? \"\" : \"d-none\"}`}\n            />\n            Approve\n          </Button>\n        </Col>\n        <Col xs=\"auto\" className=\"mt-3\">\n          <Button\n            variant=\"success\"\n            onClick={async () => {\n              setIsGiving(true);\n              try {\n                await airdrop(web3, selectedToken, selectedAccount, toList, Number(defaultAmount));\n              } finally {\n                setIsGiving(false);\n              }\n            }}\n            disabled={!canGive || isGiving}\n          >\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n              className={`me-1 ${isGiving ? \"\" : \"d-none\"}`}\n            />\n            Give\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col>\n          <Table>\n            <thead>\n              <tr>\n                <th>Address</th>\n                <th>Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                toList\n                  ? toList.map((to) => (\n                    <tr>\n                      <td>{to.address}</td>\n                      <td className={to.amount ? \"\" : \"text-secondary\"}>\n                        {to.amount ? to.amount : \"default\"}\n                      </td>\n                    </tr>\n                  ))\n                  : []\n              }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import \"./App.scss\";\n\nimport React, { useState } from \"react\";\n\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport { EthereumContext } from \"./utils/utils\";\n\nimport Home from \"./views/Home/Home\";\n\nfunction App(): React.ReactElement {\n  const [ethereum, setEthereum] = useState(null);\n\n  detectEthereumProvider()\n    .then(\n      (provider) => { (setEthereum as (_: unknown) => void)(provider); },\n      () => { /* don't need to handle promise */ },\n    );\n\n  if (!ethereum) {\n    return <div>You must installed MetaMask to use Celestial dashboard!</div>;\n  }\n\n  return (\n    <EthereumContext.Provider value={ethereum}>\n      <Home />\n    </EthereumContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}